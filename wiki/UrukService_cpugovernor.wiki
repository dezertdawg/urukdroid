#summary UrukDroid CPU governor service.

= Introduction =

Since our Android/Linux is [http://en.wikipedia.org/wiki/Computer_multitasking multitasking] capable, CPU needs to share it's cycles to more then one running task. This is a job for "CPU governor".

Linux has few default governors like performace, ondemand, powersafe. With UrukDroid there is one more called interactive - this CPU governor was made by people from CyanogenMOD.

To set desired governor you should use this service (this can be done by many more applications from market - but not with all available options).

= Special options =

With cpugovernor service you can see some low level CPU statistics. It's quite useful for performance/battery draining tuning - and debugging of course.
{{{
[root@urukdroid uruk.d]# ./cpugovernor stats
Uruk-CPUGovernor statistics:
        Current governor: interactive
        Overclock module: Disabled
        CPU Max: 1000000
        CPU Min: 300000
        Available frequencies: 1000000 800000 600000 300000
CPU statistics (tick spend in every frequency range):
        1000 MHz had    29720 ticks     (13.95%)
        800 MHz had     1984 ticks      (0.93%)
        600 MHz had     61024 ticks     (28.65%)
        300 MHz had     120333 ticks    (56.49%)
}}}
You can see here current CPU governor, min/max CPU frequencies (used by governor - this are not hardware min/max), available CPU frequencies and table with CPU frequency and number of ticks CPU spend with this clock value.
In this case CPU mostly works on 300Mhz (56.49%), 600Mhz (28.65%), 800Mhz (0.93%) and 1Ghz (13.95%).

= Overclocking =

Since UrukDroid 1.6 (RC3 exactly) there is build in overclocking kernel module ([http://code.google.com/p/milestone-overclock/ Milestone overclock]).

= Configuration file =

*Location:* /etc/uruk.conf/cpugovernor

*Configuration options:*
 * cpu_governor - name of CPU governor (can be any one from Linux available). _Default: interactive_
 * cpu_governor_default - name of CPU governor used when this service is disabled/stopped. _Default: ondemand_
 * cpu_freq_max/cpu_freq_min - if you want to narrow down range of frequencies that CPU governor will use - set this option. You can choose only values from "Available frequencies" (see ./cpugovernor stats). _Default: ""_ (not set)